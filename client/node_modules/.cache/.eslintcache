[{"/home/edwin/mike/Protege-Mentorship-App/client/src/index.js":"1","/home/edwin/mike/Protege-Mentorship-App/client/src/App.js":"2","/home/edwin/mike/Protege-Mentorship-App/client/src/state/index.js":"3","/home/edwin/mike/Protege-Mentorship-App/client/src/theme.js":"4","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/homePage/index.js":"5","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/loginPage/index.js":"6","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/profilePage/index.js":"7","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/postDetails/index.js":"8","/home/edwin/mike/Protege-Mentorship-App/client/src/components/FlexBetween.js":"9","/home/edwin/mike/Protege-Mentorship-App/client/src/components/Friend.js":"10","/home/edwin/mike/Protege-Mentorship-App/client/src/components/UserImage.js":"11","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/loginPage/Form.js":"12","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/CreatePost.js":"13","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/FeedWidget.js":"14","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/FriendListWidget.js":"15","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/UserWidget.js":"16","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/PostWidget.js":"17","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/navbar/index.js":"18","/home/edwin/mike/Protege-Mentorship-App/client/src/components/WidgetWrapper.js":"19"},{"size":1341,"mtime":1746523666064,"results":"20","hashOfConfig":"21"},{"size":1285,"mtime":1746534631535,"results":"22","hashOfConfig":"21"},{"size":1360,"mtime":1746523666067,"results":"23","hashOfConfig":"21"},{"size":2833,"mtime":1746523666067,"results":"24","hashOfConfig":"21"},{"size":1339,"mtime":1746523666065,"results":"25","hashOfConfig":"21"},{"size":1334,"mtime":1746523666065,"results":"26","hashOfConfig":"21"},{"size":2040,"mtime":1746538792980,"results":"27","hashOfConfig":"21"},{"size":7236,"mtime":1746538793000,"results":"28","hashOfConfig":"21"},{"size":225,"mtime":1746523666064,"results":"29","hashOfConfig":"21"},{"size":3225,"mtime":1746538793000,"results":"30","hashOfConfig":"21"},{"size":473,"mtime":1746538793017,"results":"31","hashOfConfig":"21"},{"size":12916,"mtime":1746538792913,"results":"32","hashOfConfig":"21"},{"size":7709,"mtime":1746538792986,"results":"33","hashOfConfig":"21"},{"size":2336,"mtime":1746538793000,"results":"34","hashOfConfig":"21"},{"size":1809,"mtime":1746538792991,"results":"35","hashOfConfig":"21"},{"size":5235,"mtime":1746538792986,"results":"36","hashOfConfig":"21"},{"size":7426,"mtime":1746538793000,"results":"37","hashOfConfig":"21"},{"size":6004,"mtime":1746523666065,"results":"38","hashOfConfig":"21"},{"size":285,"mtime":1746523666064,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"xpikdz",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"43"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"43"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"43"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/home/edwin/mike/Protege-Mentorship-App/client/src/index.js",[],[],[],"/home/edwin/mike/Protege-Mentorship-App/client/src/App.js",[],[],"/home/edwin/mike/Protege-Mentorship-App/client/src/state/index.js",[],[],"/home/edwin/mike/Protege-Mentorship-App/client/src/theme.js",[],[],"/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/homePage/index.js",[],[],"/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/loginPage/index.js",[],[],"/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/profilePage/index.js",[],["106"],"/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/postDetails/index.js",[],["107"],"/home/edwin/mike/Protege-Mentorship-App/client/src/components/FlexBetween.js",[],[],"/home/edwin/mike/Protege-Mentorship-App/client/src/components/Friend.js",["108"],[],"import { PersonAddOutlined, PersonRemoveOutlined } from \"@mui/icons-material\";\nimport { Box, IconButton, Typography, useTheme } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setFriends } from \"state\";\nimport FlexBetween from \"./FlexBetween\";\nimport UserImage from \"./UserImage\";\n\nconst Friend = ({ connectionId, name, subtitle, userPicturePath }) => {\n    const { palette } = useTheme();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const { _id } = useSelector((state) => state.user);\n    const token = useSelector((state) => state.token);\n    const connections = useSelector((state) => state.user.connections);\n    const REACT_APP_HOST = process.env.REACT_APP_HOST;\n\n    const primaryLight = palette.primary.light;\n    const primaryDark = palette.primary.dark;\n    const main = palette.neutral.main;\n    const medium = palette.neutral.medium;\n\n    const isFriend = connections.find((connection) => connection._id === connectionId);\n\n    const patchFriend = async () => {\n        if(connectionId!==undefined){\n            const response = await fetch(`https://protege-mentorship-app-backend.onrender.com/users/${_id}/${connectionId}`,\n            {\n                method: \"PATCH\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    \"Content-Type\": \"application/json\",\n                },\n            });\n            const data = await response.json();\n            dispatch(setFriends({ connections: data }));\n        }\n        \n    };\n\n    return (\n        <FlexBetween>\n            <FlexBetween>\n                <UserImage image={userPicturePath} size=\"55px\" />\n                <Box\n                    ml=\"0.5rem\"\n                    onClick={() => {\n                        if(connectionId!==undefined){\n                            navigate(`/profile/${connectionId}`);\n                            navigate(0);\n                        }\n                    }}\n                >\n                    <Typography\n                        color={main}\n                        variant=\"h5\"\n                        fontWeight=\"500\"\n                        sx={{\n                            \"&:hover\": {\n                                color: palette.primary.light,\n                                cursor: \"pointer\"\n                            }\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                    <Typography color={medium} fontSize=\"0.75rem\">\n                        {subtitle}\n                    </Typography>\n                </Box>\n            </FlexBetween>\n            {!(connectionId === _id) && (\n                <IconButton\n                    onClick={() => patchFriend()}\n                    sx={{ backgroundColor: primaryLight, p: \"0.6rem\"}}\n                >\n                    {isFriend ? (\n                        <PersonRemoveOutlined sx={{ color: primaryDark }} /> \n                    ) : (\n                        <PersonAddOutlined sx={{ color: primaryDark }} /> \n                    )}\n                </IconButton>\n            )}\n        </FlexBetween>\n    )\n}\n\nexport default Friend;","/home/edwin/mike/Protege-Mentorship-App/client/src/components/UserImage.js",["109"],[],"import { Box } from '@mui/material'\nimport React from 'react'\n\nconst UserImage = ({ image, size=\"60px\"}) => {\n  const REACT_APP_HOST = process.env.REACT_APP_HOST;\n  return (\n    <Box width={size} height={size}>\n        <img\n            style={{ objectFit: \"cover\", borderRadius: \"50%\" }}\n            width={size}\n            height={size}\n            alt=\"user\"\n            src={`https://protege-mentorship-app-backend.onrender.com/assets/${image}`}\n        />\n    </Box>\n  )\n}\n\nexport default UserImage","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/loginPage/Form.js",["110","111"],[],"/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/CreatePost.js",["112"],[],"import {\n    EditOutlined,\n    DeleteOutlined,\n    ImageOutlined,\n} from \"@mui/icons-material\";\nimport {\n    Box,\n    TextField,\n    Divider,\n    Typography,\n    useTheme,\n    Button,\n    IconButton,\n    useMediaQuery,\n    MenuItem,\n} from \"@mui/material\";\nimport FlexBetween from \"components/FlexBetween\";\nimport Dropzone from \"react-dropzone\";\nimport UserImage from \"components/UserImage\";\nimport WidgetWrapper from \"components/WidgetWrapper\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"state\";\n\nconst CreatePost = ({ picturePath }) => {\n    const dispatch = useDispatch();\n    const [isImage, setIsImage] = useState();\n    const [image, setImage] = useState();\n    const [post, setPost] = useState();\n    const [selectItem, setSelectItem] = useState(\"\");\n    const { palette } = useTheme();\n    const { _id } = useSelector((state) => state.user);\n    const token = useSelector((state) => state.token);\n    const isNonMobileScreens = useMediaQuery(\"(min-width: 1000px)\");\n    const mediumMain = palette.neutral.mediumMain;\n    const medium = palette.neutral.medium;\n\n    const handlePost = async () => {\n        const formData = new FormData();\n        formData.append(\"userId\", _id);\n        formData.append(\"description\", post);\n        formData.append(\"legalDomain\", selectItem);\n        if(image) {\n            formData.append(\"picture\", image);\n            formData.append(\"picturePath\", image.name);\n        }\n        console.log(formData);\n\n        const response = await fetch(`https://protege-mentorship-app-backend.onrender.com/posts`, {\n            method: \"POST\",\n            headers: { Authorization: `Bearer ${token}` },\n            body: formData,\n        });\n        const posts = await response.json();\n        console.log(posts);\n        dispatch(setPosts({ posts }));\n        setImage(null);\n        setIsImage(null);\n        setPost(\"\");\n        setSelectItem(\"\");\n    };\n\n    return(\n        <WidgetWrapper>\n            <FlexBetween sx={{ justifyContent: \"space-between\", alignItems: \"flex-start\", gap: \"1rem\" }}>\n                <UserImage image={picturePath} />\n                <FlexBetween gap=\"1.5rem\" sx={{ width: \"100%\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                    <TextField\n                        placeholder=\"Write your query here\"\n                        onChange={(e) => setPost(e.target.value)}\n                        value={post}\n                        sx={{\n                            width: \"100%\",\n                            backgroundColor: palette.neutral.light,\n                        }}\n                        multiline={true}\n                    />\n                    <TextField\n                        select\n                        size=\"small\"\n                        value={selectItem}\n                        label=\"Choose Query Domain\"\n                        onChange={(e) => setSelectItem(e.target.value)}\n                        sx={{\n                            width: \"60%\",\n                            backgroundColor: palette.neutral.light,\n                        }}\n                    >\n                        <MenuItem value=\"Web Development\">Web Development</MenuItem>\n                        <MenuItem value=\"Machine Learning\">Machine Learning</MenuItem>\n                        <MenuItem value=\"Android / iOS Development\">Android / iOS Development</MenuItem>\n                    </TextField>\n                </FlexBetween>\n\n            </FlexBetween>\n                \n            {isImage && (\n                <Box\n                    border={`1px solid ${medium}`}\n                    borderRadius=\"5px\"\n                    mt=\"1rem\"\n                    p=\"1rem\"\n                >\n                    <Dropzone\n                        acceptedFiles=\".jpg,.jpeg,.png\"\n                        multiple={false}\n                        onDrop={(acceptedFiles) => setImage(acceptedFiles[0])}\n                    >\n                        {({ getRootProps, getInputProps }) => (   <FlexBetween>\n                                <Box\n                                    {...getRootProps()}\n                                    border={`2px dashed ${palette.primary.main}`}\n                                    p=\"1rem\"\n                                    sx={{ \"$:hover\": {cursor: \"pointer\"} }}\n                                >\n                                    <input {...getInputProps()} \n                                    />\n                                    {!image ? (\n                                        <p>Add Picture Here</p>\n                                    ) : (\n                                        <FlexBetween>\n                                            <Typography>{image.name}</Typography>\n                                            <EditOutlined />\n                                        </FlexBetween>\n                                    )}\n                                </Box>\n                                {image && (\n                                    <IconButton\n                                        onClick={() => setImage(null)}\n                                        sx={{ width: \"15%\"}}\n                                    >\n                                        <DeleteOutlined />\n                                    </IconButton>\n                                )}\n                            </FlexBetween>\n                        )}\n                    </Dropzone>\n                </Box>\n            )}\n\n            <Divider sx={{ margin: \"1.25rem 0\" }} />\n\n            <FlexBetween>\n                <FlexBetween\n                    gap=\"0.25rem\"\n                    onClick={() => setIsImage(!isImage)}\n                >\n                    <ImageOutlined sx={{ color: mediumMain }} />\n                    <Typography\n                        color={mediumMain}\n                        sx={{ \"&:hover\": { cursor: \"pointer\", color: medium } }}\n                    >\n                        Image\n                    </Typography>\n                </FlexBetween>\n                {/*isNonMobileScreens ? (\n                    <>\n                        <FlexBetween gap=\"0.25rem\">\n                            <GifBoxOutlined sx={{ color: mediumMain }} />\n                            <Typography color={mediumMain}>Clip</Typography>\n                        </FlexBetween>\n\n                        <FlexBetween gap=\"0.25rem\">\n                            <AttachFileOutlined sx={{ color: mediumMain }} />\n                            <Typography color={mediumMain}>Attachment</Typography>\n                        </FlexBetween>\n\n                        <FlexBetween gap=\"0.25rem\">\n                            <MicOutlined sx={{ color: mediumMain }} />\n                            <Typography color={mediumMain}>Audio</Typography>\n                        </FlexBetween>\n                    </>\n                    ) : (\n                        <FlexBetween gap=\"0.25rem\">\n                            <MoreHorizOutlined sx={{ color: mediumMain }} />\n                        </FlexBetween>\n                )*/}\n\n                    <Button\n                        disabled={!post || !selectItem}\n                        onClick={handlePost}\n                        sx={{\n                            color: palette.background.alt,\n                            backgroundColor: palette.primary.main,\n                            borderRadius: \"3rem\",\n                            \"&:hover\": {backgroundColor: palette.primary.dark}\n                        }}\n                    >\n                        POST\n                    </Button>\n            </FlexBetween>\n        </WidgetWrapper>\n    )\n}\n\nexport default CreatePost;\n \n","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/FeedWidget.js",["113","114"],[],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"state\";\nimport PostWidget from \"./PostWidget\";\n\nconst FeedWidget = ({ userId, isProfile = false }) => {\n    const dispatch = useDispatch();\n    const posts = useSelector((state) => state.posts);\n    const token = useSelector((state) => state.token);\n    const REACT_APP_HOST = process.env.REACT_APP_HOST;\n\n    //api call for fetching all posts\n    const getPosts = async () => {\n        const response = await fetch(`https://protege-mentorship-app-backend.onrender.com/posts`, {\n            method: \"GET\",\n            headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const data = await response.json();\n        dispatch(setPosts({ posts: data }));\n    };\n\n    const getUserPosts = async () => {\n        const response = await fetch(`https://protege-mentorship-app-backend.onrender.com/posts/${userId}/posts`, {\n            method: \"GET\",\n            headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const data = await response.json();\n        dispatch(setPosts({ posts: data }));\n    };\n\n    useEffect(() => {\n        if(isProfile) {\n            getUserPosts();\n        } else {\n            getPosts();\n        }\n    }, []);\n\n    return (\n        <>\n            {posts.map((\n                {\n                    _id,\n                    userId,\n                    firstName,\n                    lastName,\n                    userType,\n                    description,\n                    legalDomain,\n                    location,\n                    picturePath,\n                    userPicturePath,\n                    interests,\n                    comments,\n                }\n            ) => (\n                <PostWidget \n                    key={_id}\n                    postId={_id}\n                    postUserId={userId}\n                    name={`${firstName} ${lastName}`}\n                    userType={userType}\n                    description={description}\n                    legalDomain={legalDomain}\n                    location={location}\n                    picturePath={picturePath}\n                    userPicturePath={userPicturePath}\n                    interests={interests}\n                    comments={comments}\n                />\n            )\n            )}\n        </>\n    )\n    \n}\n\nexport default FeedWidget;","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/FriendListWidget.js",["115"],[],"import { useEffect } from \"react\";\nimport { Box, Typography, useTheme } from \"@mui/material\";\nimport Friend from \"components/Friend\";\nimport WidgetWrapper from \"components/WidgetWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFriends } from \"state\";\n\nconst FriendListWidget = ({ userId }) => {\n    const dispatch = useDispatch();\n    const { palette } = useTheme();\n    const token = useSelector((state) => state.token);\n    const connections = useSelector((state) => state.user.connections);\n\n    const getFriends = async () => {\n        const response = await fetch(\n            `https://protege-mentorship-app-backend.onrender.com/users/${userId}/connections`,\n            {\n                method: \"GET\",\n                headers: { Authorization: `Bearer ${token}` },\n            }\n        );\n        const data = await response.json();\n        dispatch(setFriends({ connections: data }));\n    };\n\n    useEffect(() => {\n        getFriends();\n    }, []);\n\n    return (\n        <WidgetWrapper>\n            <Typography\n                color={palette.neutral.dark}\n                varaint=\"h5\"\n                fontWeight=\"500\"\n                sx={{ mb: \"1.5rem\" }}\n            >\n                Friend List\n            </Typography>\n            <Box display=\"flex\" flexDirection=\"column\" gap=\"1.5rem\">\n                {connections.map((connection) => (\n                    <Friend \n                        key={connection._id}\n                        connectionId={connection._id}\n                        name={`${connection.firstName} ${connection.lastName}`}\n                        subtitle={connection.userType}\n                        userPicturePath={connection.picturePath}\n                    />\n                ))}\n            </Box>\n        </WidgetWrapper>\n    )\n}\n\nexport default FriendListWidget;","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/UserWidget.js",["116","117","118"],["119"],"import {\n    ManageAccountsOutlined,\n    EditOutlined,\n    LocationOnOutlined,\n    WorkOutlineOutlined,\n    Edit,\n} from \"@mui/icons-material\";\nimport { Box, Typography, Divider, useTheme, TextField} from \"@mui/material\";\nimport UserImage from \"components/UserImage\";\nimport FlexBetween from \"components/FlexBetween\";\nimport WidgetWrapper from \"components/WidgetWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst UserWidget = ({ userId, picturePath }) => {\n    const [user, setUser] = useState(null);\n    const { palette } = useTheme();\n    const navigate = useNavigate();\n    const visitorId = useSelector((state) => state.user._id);\n    const token = useSelector((state) => state.token);\n    const dark = palette.neutral.dark;\n    const medium = palette.neutral.medium;\n    const main = palette.neutral.main;\n\n    const getUser = async () => {\n        const response = await fetch(`https://protege-mentorship-app-backend.onrender.com/users/${userId}`, {\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n        });\n        const data = await response.json();\n        setUser(data);\n    };\n    console.log(\"visitorId\", visitorId);\n    console.log(\"userId\", userId);\n\n    useEffect(() => {\n        getUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if(!user) {\n        return null;\n    }\n\n    const {\n        firstName,\n        lastName,\n        email,\n        location,\n        userType,\n        viewedProfile,\n        connections,\n    } = user;\n\n    return (\n        <WidgetWrapper>\n            <FlexBetween\n                gap=\"0.5rem\"\n                pb=\"1.1rem\"\n                onClick={() => navigate(`/profile/${userId}`)}\n            >\n                <FlexBetween gap=\"1rem\">\n                    <UserImage image={picturePath} />\n                    <Box>\n                        <Typography\n                            variant=\"h4\"\n                            color={dark}\n                            fontWeight=\"500\"\n                            sx={{\n                                \"&:hover\": {\n                                    color: palette.primary.light,\n                                    cursor: \"pointer\"\n                                }\n                            }}\n                        >\n                            {firstName} {lastName}\n                        </Typography>\n                        <Typography color={medium}>\n                            {connections.length} connections\n                        </Typography>\n                    </Box>\n                </FlexBetween>\n                <ManageAccountsOutlined />\n            </FlexBetween>\n\n            <Divider />\n            <Box p=\"1rem 0\">\n                <Box display=\"flex\" alignItems=\"center\" gap=\"1rem\" mb=\"0.5rem\">\n                    <LocationOnOutlined fontSize=\"large\" sx={{ color: main }} />\n                    <Typography color={medium}>{location}</Typography>\n                </Box>\n                <Box display=\"flex\" alignItems=\"center\" gap=\"1rem\" mb=\"0.5rem\">\n                    <WorkOutlineOutlined fontSize=\"large\" sx={{ color: main }} />\n                    <Typography color={medium}>{userType}</Typography>\n                </Box>\n            </Box>\n\n            <Box>\n                <FlexBetween mb=\"0.5rem\">\n                    <Typography color={medium}\n                    >\n                        Email: {email}\n                    </Typography>\n                </FlexBetween>\n            </Box>\n\n            <Box>\n                <Typography\n                    fontSize=\"1rem\"\n                    color={main}\n                    fontWeight=\"500\"\n                    mb=\"1rem\" \n                >\n                    Social Profiles\n                </Typography>\n                <FlexBetween gap=\"1rem\" mb=\"0.5rem\">\n                    <FlexBetween gap=\"1rem\">\n                        <Box>\n                            <Typography color={main} fontWeight=\"500\">\n                                Twitter\n                            </Typography>\n                            <Typography color={medium}>\n                                Social Network\n                            </Typography>\n                        </Box>\n                    </FlexBetween>\n                    <EditOutlined sx={{ color: main }} />\n                </FlexBetween>\n                <FlexBetween gap=\"1rem\" mb=\"0.5rem\">\n                    <FlexBetween gap=\"1rem\">\n                        <Box>\n                            <Typography color={main} fontWeight=\"500\">\n                                LinkedIn\n                            </Typography>\n                            <Typography color={medium}>\n                                Network Platform\n                            </Typography>\n                        </Box>\n                        {/*(visitorId === userId) && (\n                            <TextField />\n                        )*/}\n                    </FlexBetween>\n                    <EditOutlined sx={{ color: main }} />\n                </FlexBetween>\n            </Box>\n        </WidgetWrapper>\n    )\n}\n\nexport default UserWidget;","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/PostWidget.js",["120","121","122","123"],[],"import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPost } from \"state\";\nimport { ChatBubbleOutlineOutlined, FavoriteBorderOutlined, FavoriteOutlined, ShareOutlined } from \"@mui/icons-material\";\nimport { Box, Button, Divider, IconButton, TextField, Typography, useTheme } from \"@mui/material\";\nimport FlexBetween from \"components/FlexBetween\";\nimport Friend from \"components/Friend\";\nimport WidgetWrapper from \"components/WidgetWrapper\";\nimport UserImage from \"components/UserImage\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst PostWidget = ({\n    postId,\n    postUserId,\n    name,\n    description,\n    userType,\n    location,\n    legalDomain,\n    picturePath,\n    userPicturePath,\n    interests,\n    comments,\n    buttonDisable,\n}) => {\n    const [isComments, setIsComments] = useState(false);\n    const [comment, setComment] = useState(\"\");\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const token = useSelector((state) => state.token);\n    const loggedInUser = useSelector((state) => state.user);\n    const isInterested = Boolean(interests.find((user) => loggedInUser.userId === user.userId));\n    const interestCount = Object.keys(interests).length;\n    const REACT_APP_HOST = process.env.REACT_APP_HOST;\n    const { palette } = useTheme();\n    const main = palette.neutral.main;\n    const primary = palette.primary.main;\n\n    const patchInterest = async () => {\n        console.log(loggedInUser);\n        const response = await fetch(`https://protege-mentorship-app-backend.onrender.com/posts/${postId}/interest`, {\n            method: \"PATCH\",\n            headers: { \n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ user: loggedInUser }),\n        });\n        console.log(response)\n        const updatedPost = await response.json();\n        dispatch(setPost({ post: updatedPost }));\n    };\n\n    const patchComment = async () => {\n        \n        const response = await fetch(`https://protege-mentorship-app-backend.onrender.com/posts/${postId}/comment`, {\n            method: \"PATCH\",\n            headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json'},\n            body: JSON.stringify({ user: loggedInUser, comment: comment }),\n        });\n        console.log(response);\n        const updatedPost = await response.json();\n        dispatch(setPost({ post: updatedPost}))\n        console.log(updatedPost)\n        setComment(\"\");\n    }\n\n    return (\n        <WidgetWrapper \n            m=\"2rem 0\" gap=\"1rem\"\n        >\n            <Friend \n                connectionId={postUserId}\n                name={name}\n                subtitle={userType}\n                userPicturePath={userPicturePath}\n            />\n            <FlexBetween \n                sx={{ \n                    flexDirection: \"column\", \n                    alignItems: \"flex-start\", \n                    width:\"100%\",\n                    cursor: \"pointer\"\n                }}\n                onClick={() => {\n                navigate(`/posts/${postId}`);\n                navigate(0);\n                }}\n            >\n                <Typography color={main} sx={{ mt: \"1rem\", fontSize: \"1rem\" }}>\n                    {description}\n                </Typography>\n                {picturePath && (\n                    <img \n                        width=\"100%\"\n                        height=\"auto\"\n                        alt=\"post\"\n                        style={{ borderRadius: \"0.75rem\", marginTop: \"0.75rem\" }}\n                        src={`https://protege-mentorship-app-backend.onrender.com/assets/${picturePath}`}\n                    />\n                )}\n                <FlexBetween width=\"100%\" mt=\"0.5rem\" fontSize=\"0.75rem\">\n                    <Typography color={primary} sx={{ fontSize: \"0.75rem\", fontWeight: \"500\" }}>Location: {location}</Typography>\n                    <Typography color={primary} sx={{ fontSize: \"0.75rem\", fontWeight: \"500\" }}>Domain: {legalDomain}</Typography>\n                </FlexBetween>\n            </FlexBetween>\n            <FlexBetween mt=\"0.25rem\">\n                <FlexBetween gap=\"1rem\" width=\"100%\">\n                    <FlexBetween gap=\"0.5rem\">\n                        <Button\n                            size=\"small\"\n                            disabled={isInterested}\n                            onClick={patchInterest}\n                            sx={{ \n                                backgroundColor: palette.primary.main,\n                                color: palette.background.alt,\n                                \"&:hover\": {backgroundColor: palette.primary.dark}\n                            }}\n                        >\n                            Interested\n                        </Button>\n                        <Typography>{interestCount}</Typography>\n                    </FlexBetween>\n\n                    {/*<FlexBetween>\n                        <IconButton onClick={patchLike}>\n                            {isInterested ? (\n                                <Button sx={{ color: primary }}>Interested</Button>\n                            ) : (\n                                <Button />\n                            )}\n                        </IconButton>\n                        <Typography>{interestCount}</Typography>\n                    </FlexBetween>*/}\n\n                    <FlexBetween gap=\"0.3rem\">\n                        <IconButton disabled={buttonDisable} onClick={() => setIsComments(!isComments)}>\n                            <ChatBubbleOutlineOutlined />\n                        </IconButton>\n                        <Typography>{comments.length}</Typography>\n\n                    </FlexBetween>\n                </FlexBetween>\n            </FlexBetween>\n\n            {isComments && (\n                <Box mt=\"0.5rem\">\n                    <TextField \n                        placeholder=\"write a comment\"\n                        onChange={(e) => setComment(e.target.value)}\n                        value={comment}\n                        sx={{\n                            width: \"100%\",\n                            backgroundColor: palette.neutral.light,\n                        }}\n                        multiline={true}                         \n                    />\n                    <Button size=\"small\" onClick={patchComment}>Post Comment</Button>\n\n                    {comments.length > 0 && comments.map((comment, i) => (\n                        <Box key={`${name}-${i}`}>\n                            <Divider />\n                            <FlexBetween sx={{flexDirection: \"column\", alignItems: \"flex-start\", m: \"0.5rem 1rem\" }}>\n                                <FlexBetween>\n                                    <UserImage image={comment.user.picturePath} size=\"25px\" />\n                                    <Typography sx={{ color: primary, m:\"0.25rem\" }}>\n                                        {comment.user.firstName}\n                                    </Typography>\n                                </FlexBetween>\n\n                                <Typography sx={{ color: main, mt:\"0.25rem\" }}>\n                                    {comment.comment}\n                                </Typography>\n                            </FlexBetween>\n                        </Box>\n                    ))}\n                    <Divider />\n                </Box>\n            )}\n        </WidgetWrapper>\n    )\n};\n\nexport default PostWidget;","/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/navbar/index.js",["124"],[],"import { useState } from \"react\";\nimport { \n  Box,\n  IconButton,\n  InputBase,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  useTheme,\n  useMediaQuery,\n} from \"@mui/material\";\nimport {\n  Search,\n  Message,\n  DarkMode,\n  LightMode,\n  Notifications,\n  Help,\n  Menu,\n  Close,\n} from \"@mui/icons-material\";\nimport PersonIcon from '@mui/icons-material/Person';\nimport { useDispatch, useSelector } from \"react-redux/es\";\nimport { setMode, setLogout } from \"state\";\nimport { Form, useNavigate } from \"react-router-dom\";\nimport FlexBetween from \"components/FlexBetween\";\n\nconst NavBar = ({connectionId}) => {\n  const [isMobileMenuToggled, setIsMobileMenuToggled] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector((state) => state.user);\n  const isNonMobileScreens = useMediaQuery(\"(min-width: 1000px)\");\n\n  const theme = useTheme();\n  const neutralLight = theme.palette.neutral.light;\n  const dark = theme.palette.neutral.dark;\n  const background = theme.palette.background.default;\n  const primaryLight = theme.palette.primary.light;\n  const alt = theme.palette.background.alt;\n\n  const fullName = `${user.firstName} ${user.lastName}`;\n\n  return <FlexBetween padding=\"1rem 6%\" backgroundColor={alt} position=\"sticky\">\n    <FlexBetween gap=\"1.75rem\">\n      <Typography\n        fontWeight=\"bold\"\n        fontSize=\"clamp(1rem, 2rem, 2.25rem)\"\n        color=\"primary\"\n        onClick={() => navigate(\"/home\")}\n        sx={{\n          \"&:hover\": {\n            color: primaryLight,\n            cursor: \"pointer\",\n          },\n        }}\n      >\n        Protege\n      </Typography>\n      {isNonMobileScreens && (\n        <FlexBetween \n          backgroundColor=\"neutralLight\" \n          borderRadius=\"1rem\"\n          gap=\"3rem\"\n          padding=\"0.1rem 1.5rem\"\n        >\n          <InputBase placeholder=\"Search...\" />\n          <IconButton>\n            <Search />\n          </IconButton>\n        </FlexBetween>\n      )}\n    </FlexBetween>\n\n    {/* DESKTOP NAV */}\n    {isNonMobileScreens ? (\n      <FlexBetween gap=\"2rem\">\n        <IconButton onClick={() => dispatch(setMode())}>\n          {theme.palette.mode === \"dark\" ? (\n            <DarkMode sx={{ fontSize: \"25px\" }}/>\n          ) : (\n            <LightMode sx={{ color: dark, fontSize: \"25px\" }} />)}\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            navigate(`/profile/${connectionId}`);\n            navigate(0);\n          }}\n        >\n          <PersonIcon sx={{ fontSize: \"25px\" }} />\n        </IconButton>\n        <Notifications sx={{ fontSize: \"25px\" }} />\n        <Help sx={{ fontSize: \"25px\" }} />\n        <FormControl variant=\"standard\" value={fullName}>\n          <Select\n            value={fullName}\n            sx={{\n              backgroundColor: neutralLight,\n              width: \"150px\",\n              borderRadius: \"0.25rem\",\n              p: \"0.25rem 1rem\",\n              \"& .MuiSvgIcon-root\": {\n                pr: \"0.25rem\",\n                width: \"3rem\"\n              },\n              \"& .MuiSelect-select: focus\": {\n                backgroundColor: neutralLight\n              },\n              textOverflow: \"ellipsis\",\n            }}\n            input={<InputBase />}\n          >\n            <MenuItem value={fullName}>\n              <Typography>{fullName}</Typography>\n            </MenuItem>\n            <MenuItem onClick={() => dispatch(setLogout())}>Log Out</MenuItem>\n          </Select>\n        </FormControl>\n      </FlexBetween>\n      ) : (\n        <IconButton\n          onClick={() => setIsMobileMenuToggled(!isMobileMenuToggled)}\n        >\n          <Menu />\n        </IconButton>)}\n\n        {/* MOBILE NAV */}\n        {!isNonMobileScreens && isMobileMenuToggled && (\n          <Box\n            position=\"fixed\"\n            right=\"0\"\n            bottom=\"0\"\n            height=\"100%\"\n            zIndex=\"10\"\n            maxWidth=\"500px\"\n            minWidth=\"300px\"\n            backgroundColor={background}\n          >\n            {/* CLOSE ICON */}\n            <Box display=\"flex\" justifyContent=\"flex-end\" p=\"1rem\">\n            <IconButton\n              onClick={() => setIsMobileMenuToggled(!isMobileMenuToggled)}\n            >\n              <Close />\n            </IconButton>\n            </Box>\n\n            {/* MENU ITEMS */}\n            <FlexBetween \n              display=\"flex\" \n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              gap=\"3rem\"\n            >\n              <IconButton onClick={() => dispatch(setMode())}>\n                {theme.palette.mode === \"dark\" ? (\n                  <DarkMode sx={{ fontSize: \"25px\" }}/>\n                ) : (\n                  <LightMode sx={{ color: dark, fontSize: \"25px\" }} />)}\n              </IconButton>\n              <Message sx={{ fontSize: \"25px\" }} />\n              <Notifications sx={{ fontSize: \"25px\" }} />\n              <Help sx={{ fontSize: \"25px\" }} />\n              <FormControl variant=\"standard\" value={\"fullName\"}>\n                <Select\n                  value={fullName}\n                  sx={{\n                    backgroundColor: neutralLight,\n                    width: \"150px\",\n                    borderRadius: \"0.25rem\",\n                    p: \"0.25rem 1rem\",\n                    \"& .MuiSvgIcon-root\": {\n                      pr: \"0,25rem\",\n                      width: \"3rem\"\n                    },\n                    \"& .MuiSelect-select: focus\": {\n                      backgroundColor: neutralLight\n                    }\n                  }}\n                  input={<InputBase />}\n                >\n                  <MenuItem value={fullName}>\n                    <Typography>{fullName}</Typography>\n                  </MenuItem>\n                  <MenuItem onClick={() => dispatch(setLogout())}>Log Out</MenuItem>\n                </Select>\n              </FormControl>\n            </FlexBetween>      \n          </Box>\n        )}\n  </FlexBetween>\n}\n\nexport default NavBar;","/home/edwin/mike/Protege-Mentorship-App/client/src/components/WidgetWrapper.js",[],[],{"ruleId":"125","severity":1,"message":"126","line":30,"column":6,"nodeType":"127","endLine":30,"endColumn":8,"suggestions":"128","suppressions":"129"},{"ruleId":"125","severity":1,"message":"130","line":43,"column":8,"nodeType":"127","endLine":43,"endColumn":10,"suggestions":"131","suppressions":"132"},{"ruleId":"133","severity":1,"message":"134","line":16,"column":11,"nodeType":"135","messageId":"136","endLine":16,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":5,"column":9,"nodeType":"135","messageId":"136","endLine":5,"endColumn":23},{"ruleId":"133","severity":1,"message":"137","line":9,"column":5,"nodeType":"135","messageId":"136","endLine":9,"endColumn":11},{"ruleId":"133","severity":1,"message":"134","line":67,"column":11,"nodeType":"135","messageId":"136","endLine":67,"endColumn":25},{"ruleId":"133","severity":1,"message":"138","line":34,"column":11,"nodeType":"135","messageId":"136","endLine":34,"endColumn":29},{"ruleId":"133","severity":1,"message":"134","line":10,"column":11,"nodeType":"135","messageId":"136","endLine":10,"endColumn":25},{"ruleId":"125","severity":1,"message":"139","line":39,"column":8,"nodeType":"127","endLine":39,"endColumn":10,"suggestions":"140"},{"ruleId":"125","severity":1,"message":"141","line":28,"column":8,"nodeType":"127","endLine":28,"endColumn":10,"suggestions":"142"},{"ruleId":"133","severity":1,"message":"143","line":6,"column":5,"nodeType":"135","messageId":"136","endLine":6,"endColumn":9},{"ruleId":"133","severity":1,"message":"144","line":8,"column":46,"nodeType":"135","messageId":"136","endLine":8,"endColumn":55},{"ruleId":"133","severity":1,"message":"145","line":54,"column":9,"nodeType":"135","messageId":"136","endLine":54,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":42,"column":8,"nodeType":"127","endLine":42,"endColumn":10,"suggestions":"146","suppressions":"147"},{"ruleId":"133","severity":1,"message":"148","line":4,"column":37,"nodeType":"135","messageId":"136","endLine":4,"endColumn":59},{"ruleId":"133","severity":1,"message":"149","line":4,"column":61,"nodeType":"135","messageId":"136","endLine":4,"endColumn":77},{"ruleId":"133","severity":1,"message":"150","line":4,"column":79,"nodeType":"135","messageId":"136","endLine":4,"endColumn":92},{"ruleId":"133","severity":1,"message":"134","line":34,"column":11,"nodeType":"135","messageId":"136","endLine":34,"endColumn":25},{"ruleId":"133","severity":1,"message":"151","line":26,"column":10,"nodeType":"135","messageId":"136","endLine":26,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["152"],["153"],"React Hook useEffect has missing dependencies: 'getPost' and 'post'. Either include them or remove the dependency array.",["154"],["155"],"no-unused-vars","'REACT_APP_HOST' is assigned a value but never used.","Identifier","unusedVar","'Select' is defined but never used.","'isNonMobileScreens' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPosts', 'getUserPosts', and 'isProfile'. Either include them or remove the dependency array.",["156"],"React Hook useEffect has a missing dependency: 'getFriends'. Either include it or remove the dependency array.",["157"],"'Edit' is defined but never used.","'TextField' is defined but never used.","'viewedProfile' is assigned a value but never used.",["158"],["159"],"'FavoriteBorderOutlined' is defined but never used.","'FavoriteOutlined' is defined but never used.","'ShareOutlined' is defined but never used.","'Form' is defined but never used.",{"desc":"160","fix":"161"},{"kind":"162","justification":"163"},{"desc":"164","fix":"165"},{"kind":"162","justification":"163"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"160","fix":"170"},{"kind":"162","justification":"163"},"Update the dependencies array to be: [getUser]",{"range":"171","text":"172"},"directive","","Update the dependencies array to be: [getPost, post]",{"range":"173","text":"174"},"Update the dependencies array to be: [getPosts, getUserPosts, isProfile]",{"range":"175","text":"176"},"Update the dependencies array to be: [getFriends]",{"range":"177","text":"178"},{"range":"179","text":"172"},[1055,1057],"[getUser]",[1474,1476],"[getPost, post]",[1275,1277],"[getPosts, getUserPosts, isProfile]",[983,985],"[getFriends]",[1443,1445]]