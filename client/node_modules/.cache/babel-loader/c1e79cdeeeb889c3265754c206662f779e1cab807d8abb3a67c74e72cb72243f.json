{"ast":null,"code":"var _jsxFileName = \"/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/loginPage/Form.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Box, Button, TextField, useMediaQuery, Typography, useTheme, Select, MenuItem } from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux/es\";\nimport { setLogin } from \"state\";\nimport Dropzone from \"react-dropzone\";\nimport FlexBetween from \"components/FlexBetween\";\n\n/* SCHEMA VALIDATION WITH YUP */\n// basically specifies what field accepts what type of input\n// and validates if the value entered matches input type of the field\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst registerSchema = yup.object().shape({\n  firstName: yup.string().required(\"required\"),\n  lastName: yup.string().required(\"required\"),\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\"),\n  location: yup.string().required(\"required\"),\n  userType: yup.string().required(\"required\"),\n  picture: yup.string()\n});\nconst loginSchema = yup.object().shape({\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\")\n});\nconst initialValuesRegister = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  location: \"\",\n  userType: \"\",\n  picture: \"\"\n};\nconst initialValuesLogin = {\n  email: \"\",\n  password: \"\"\n};\nconst testValues = {\n  email: \"test@test.com\",\n  password: \"testuser\"\n};\nconst Form = () => {\n  _s();\n  const [pageType, setPageType] = useState(\"login\");\n  const {\n    palette\n  } = useTheme();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isNonMobile = useMediaQuery(\"(min-width: 600px)\");\n  const isLogin = pageType === \"login\";\n  const isRegister = pageType === \"register\";\n  const REACT_APP_HOST = process.env.REACT_APP_HOST;\n  const register = async (values, onSubmitProps) => {\n    //\n    const formData = new FormData();\n    for (let value in values) {\n      formData.append(value, values[value]);\n    }\n    formData.append('picturePath', values.picture.name);\n    console.log(values);\n    console.log(onSubmitProps);\n    const savedUserResponse = await fetch(`https://protege-mentorship-app-backend.onrender.com/auth/register`, {\n      method: \"POST\",\n      body: formData\n    });\n    const savedUser = await savedUserResponse.json();\n    onSubmitProps.resetForm();\n    if (savedUser) {\n      setPageType(\"login\");\n    }\n  };\n  const login = async values => {\n    console.log(values);\n    const loggedInResponse = await fetch(`https://protege-mentorship-app-backend.onrender.com/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(values)\n    });\n    const loggedIn = await loggedInResponse.json();\n    if (loggedIn) {\n      dispatch(setLogin({\n        user: loggedIn.user,\n        token: loggedIn.token\n      }));\n      navigate(\"/home\");\n    }\n  };\n  const handleTestLogin = async () => {\n    await login(testValues);\n    console.log(\"hit\", testValues);\n  };\n  const handleFormSubmit = async (values, onSubmitProps) => {\n    onSubmitProps.resetForm();\n    if (isLogin) await login(values, onSubmitProps);\n    if (isRegister) await register(values, onSubmitProps);\n    console.log(\"submitProps\", onSubmitProps);\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    onSubmit: handleFormSubmit,\n    initialValues: isLogin ? initialValuesLogin : initialValuesRegister,\n    validationSchema: isLogin ? loginSchema : registerSchema,\n    children: ({\n      values,\n      errors,\n      touched,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      setFieldValue,\n      resetForm\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"grid\",\n        gap: \"30px\",\n        gridTemplateColumns: \"repeat(4, minmax(0, 1fr))\",\n        sx: {\n          \"& > div\": {\n            gridColumn: isNonMobile ? undefined : \"span 4\"\n          }\n        },\n        children: [isRegister && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"First Name\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.firstName || '',\n            name: \"firstName\",\n            error: Boolean(touched.firstName) && Boolean(errors.lastName),\n            helperText: touched.firstName && errors.firstName,\n            sx: {\n              gridColumn: \"span 4\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Last Name\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.lastName || '',\n            name: \"lastName\",\n            error: Boolean(touched.lastName) && Boolean(errors.lastName),\n            helperText: touched.lastName && errors.lastName,\n            sx: {\n              gridColumn: \"span 2\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Location\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.location || '',\n            name: \"location\",\n            error: Boolean(touched.location) && Boolean(errors.lastName),\n            helperText: touched.location && errors.location,\n            sx: {\n              gridColumn: \"span 2\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            label: \"User Type\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.userType || '',\n            name: \"userType\",\n            error: Boolean(touched.userType) && Boolean(errors.lastName),\n            helperText: touched.userType && errors.userType,\n            sx: {\n              gridColumn: \"span 4\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Mentee\",\n              children: \"Mentee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Mentor\",\n              children: \"Mentor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            gridColumn: \"span 4\",\n            border: `1px solid ${palette.neutral.medium}`,\n            borderRadius: \"5px\",\n            p: \"1rem\",\n            children: /*#__PURE__*/_jsxDEV(Dropzone, {\n              acceptedFiles: \".jpg,.jpeg,.png\",\n              multiple: false,\n              onDrop: acceptedFiles => setFieldValue(\"picture\", acceptedFiles[0] || \"\"),\n              children: ({\n                getRootProps,\n                getInputProps\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                ...getRootProps(),\n                border: `2px dashed ${palette.primary.main}`,\n                p: \"1rem\",\n                sx: {\n                  \"$:hover\": {\n                    cursor: \"pointer\"\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 45\n                }, this), !values.picture ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Add Picture Here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(FlexBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    children: values.picture.name || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          value: values.email || '',\n          name: \"email\",\n          error: Boolean(touched.email) && Boolean(errors.lastName),\n          helperText: touched.email && errors.email,\n          sx: {\n            gridColumn: \"span 4\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          type: \"password\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          value: values.password || '',\n          name: \"password\",\n          error: Boolean(touched.password) && Boolean(errors.lastName),\n          helperText: touched.password && errors.password,\n          sx: {\n            gridColumn: \"span 4\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          type: \"submit\",\n          sx: {\n            mt: \"2rem\",\n            p: \"1rem\",\n            backgroundColor: palette.primary.main,\n            color: palette.background.alt,\n            \"&:hover\": {\n              backgroundColor: palette.primary.dark\n            }\n          },\n          children: isLogin ? \"LOGIN\" : \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          onClick: () => {\n            handleTestLogin();\n          },\n          sx: {\n            m: \"1rem 0\",\n            p: \"1rem\",\n            backgroundColor: palette.primary.main,\n            color: palette.background.alt,\n            \"&:hover\": {\n              backgroundColor: palette.primary.dark\n            }\n          },\n          children: \"Join as test user.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FlexBetween, {\n          sx: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            onClick: () => {\n              setPageType(isLogin ? \"register\" : \"login\");\n              resetForm();\n            },\n            sx: {\n              textDecoration: \"underline\",\n              color: palette.primary.main,\n              \"&:hover\": {\n                cursor: \"pointer\",\n                color: palette.primary.light\n              }\n            },\n            children: isLogin ? \"Not a member? Sign Up here.\" : \"Already a member? Hop in here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"8DIOG0TZdtriTk986WtN4O8mFiw=\", false, function () {\n  return [useTheme, useDispatch, useNavigate, useMediaQuery];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Box","Button","TextField","useMediaQuery","Typography","useTheme","Select","MenuItem","EditOutlinedIcon","Formik","yup","useNavigate","useDispatch","setLogin","Dropzone","FlexBetween","jsxDEV","_jsxDEV","Fragment","_Fragment","registerSchema","object","shape","firstName","string","required","lastName","email","password","location","userType","picture","loginSchema","initialValuesRegister","initialValuesLogin","testValues","Form","_s","pageType","setPageType","palette","dispatch","navigate","isNonMobile","isLogin","isRegister","REACT_APP_HOST","process","env","register","values","onSubmitProps","formData","FormData","value","append","name","console","log","savedUserResponse","fetch","method","body","savedUser","json","resetForm","login","loggedInResponse","headers","JSON","stringify","loggedIn","user","token","handleTestLogin","handleFormSubmit","onSubmit","initialValues","validationSchema","children","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","display","gap","gridTemplateColumns","sx","gridColumn","undefined","label","onBlur","onChange","error","Boolean","helperText","fileName","_jsxFileName","lineNumber","columnNumber","select","border","neutral","medium","borderRadius","p","acceptedFiles","multiple","onDrop","getRootProps","getInputProps","primary","main","cursor","type","fullWidth","mt","backgroundColor","color","background","alt","dark","onClick","m","width","textDecoration","light","_c","$RefreshReg$"],"sources":["/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/loginPage/Form.js"],"sourcesContent":["import { useState } from \"react\";\nimport {\n    Box,\n    Button,\n    TextField,\n    useMediaQuery,\n    Typography,\n    useTheme,\n    Select,\n    MenuItem\n} from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux/es\";\nimport { setLogin } from \"state\";\nimport Dropzone from \"react-dropzone\";\nimport FlexBetween from \"components/FlexBetween\";\n\n/* SCHEMA VALIDATION WITH YUP */\n// basically specifies what field accepts what type of input\n// and validates if the value entered matches input type of the field\nconst registerSchema = yup.object().shape({\n    firstName: yup.string().required(\"required\"),\n    lastName: yup.string().required(\"required\"),\n    email: yup.string().email(\"invalid email\").required(\"required\"),\n    password: yup.string().required(\"required\"),\n    location: yup.string().required(\"required\"),\n    userType: yup.string().required(\"required\"),\n    picture: yup.string(),\n});\n\nconst loginSchema = yup.object().shape({\n    email: yup.string().email(\"invalid email\").required(\"required\"),\n    password: yup.string().required(\"required\"),\n})\n\nconst initialValuesRegister = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    location: \"\",\n    userType: \"\",\n    picture: \"\",\n};\n\nconst initialValuesLogin = {\n    email: \"\",\n    password: \"\",\n};\n\nconst testValues = {\n    email: \"test@test.com\", \n    password: \"testuser\",\n}\n\nconst Form = () => {\n    const [pageType, setPageType] = useState(\"login\");\n    const { palette } = useTheme();\n    const dispatch = useDispatch();\n    const navigate =  useNavigate();\n    const isNonMobile = useMediaQuery(\"(min-width: 600px)\");\n    const isLogin = pageType === \"login\";\n    const isRegister = pageType === \"register\";\n    const REACT_APP_HOST = process.env.REACT_APP_HOST;\n\n    const register = async (values, onSubmitProps) => {\n        //\n        const formData = new FormData();\n        for(let value in values) {\n            formData.append(value, values[value])\n        }\n        formData.append('picturePath', values.picture.name);\n\n        console.log(values);\n        console.log(onSubmitProps)\n\n        const savedUserResponse = await fetch(\n            `https://protege-mentorship-app-backend.onrender.com/auth/register`,\n            {\n                method: \"POST\",\n                body: formData,\n            },\n        );\n        const savedUser = await savedUserResponse.json();\n        onSubmitProps.resetForm();\n\n        if(savedUser) {\n            setPageType(\"login\");\n        }\n    };\n\n    const login = async (values) => {\n        console.log(values)\n        const loggedInResponse = await fetch(\n            `https://protege-mentorship-app-backend.onrender.com/auth/login`,\n            {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\"},\n                body: JSON.stringify(values),\n            },\n        );\n        const loggedIn = await loggedInResponse.json();\n        if(loggedIn) {\n            dispatch(\n                setLogin({\n                    user: loggedIn.user,\n                    token: loggedIn.token,\n                })\n            );\n            navigate(\"/home\");\n        }\n    }\n\n    const handleTestLogin = async () => {\n        await login(testValues);\n        console.log(\"hit\", testValues);\n    }\n\n\n    const handleFormSubmit = async (values, onSubmitProps) => {\n        onSubmitProps.resetForm();\n        if(isLogin) await login(values, onSubmitProps);\n        if(isRegister) await register(values, onSubmitProps);\n        console.log(\"submitProps\", onSubmitProps);\n\n    }\n\n    return (\n        <Formik\n            onSubmit={handleFormSubmit}\n            initialValues={isLogin ? initialValuesLogin : initialValuesRegister}\n            validationSchema={isLogin ? loginSchema : registerSchema}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                setFieldValue,\n                resetForm,\n            }) => (\n                <form onSubmit={handleSubmit}>\n                    <Box\n                        display=\"grid\"\n                        gap=\"30px\"\n                        gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\n                        sx={{\n                            \"& > div\": {gridColumn: isNonMobile ? undefined : \"span 4\"}\n                        }}\n                    >\n                        {isRegister && (\n                            <>\n                                <TextField\n                                    label=\"First Name\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.firstName || ''}\n                                    name=\"firstName\"\n                                    error={Boolean(touched.firstName) && Boolean(errors.lastName)}\n                                    helperText={touched.firstName && errors.firstName}\n                                    sx={{ gridColumn: \"span 4\"}}\n                                />\n                                <TextField\n                                    label=\"Last Name\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.lastName || ''}\n                                    name=\"lastName\"\n                                    error={Boolean(touched.lastName) && Boolean(errors.lastName)}\n                                    helperText={touched.lastName && errors.lastName}\n                                    sx={{ gridColumn: \"span 2\"}}\n                                />\n                                <TextField\n                                    label=\"Location\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.location || ''}\n                                    name=\"location\"\n                                    error={Boolean(touched.location) && Boolean(errors.lastName)}\n                                    helperText={touched.location && errors.location}\n                                    sx={{ gridColumn: \"span 2\"}}\n                                />\n                                <TextField\n                                    select\n                                    label=\"User Type\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.userType || ''}\n                                    name=\"userType\"\n                                    error={Boolean(touched.userType) && Boolean(errors.lastName)}\n                                    helperText={touched.userType && errors.userType}\n                                    sx={{ gridColumn: \"span 4\"}}\n                                >\n                                    <MenuItem value=\"Mentee\">Mentee</MenuItem>\n                                    <MenuItem value=\"Mentor\">Mentor</MenuItem>\n                                </TextField>\n                                <Box\n                                    gridColumn=\"span 4\"\n                                    border={`1px solid ${palette.neutral.medium}`}\n                                    borderRadius=\"5px\"\n                                    p=\"1rem\"\n                                >\n                                <Dropzone\n                                    acceptedFiles=\".jpg,.jpeg,.png\"\n                                    multiple={false}\n                                    onDrop={(acceptedFiles) => setFieldValue(\"picture\", acceptedFiles[0] || \"\")}\n                                >\n                                    {({ getRootProps, getInputProps }) => (\n                                        <Box\n                                            {...getRootProps()}\n                                            border={`2px dashed ${palette.primary.main}`}\n                                            p=\"1rem\"\n                                            sx={{ \"$:hover\": {cursor: \"pointer\"} }}\n                                        >\n                                            <input {...getInputProps()} \n                                            />\n                                            {!values.picture ? (\n                                                <p>Add Picture Here</p>\n                                            ) : (\n                                                <FlexBetween>\n                                                    <Typography>{values.picture.name || \"\"}</Typography>\n                                                    <EditOutlinedIcon />\n                                                </FlexBetween>\n                                            )}\n                                        </Box>\n                                    )}\n                                </Dropzone>\n\n                                </Box>\n                            </>\n                        )}\n                        <TextField\n                            label=\"Email\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.email || ''}\n                            name=\"email\"\n                            error={Boolean(touched.email) && Boolean(errors.lastName)}\n                            helperText={touched.email && errors.email}\n                            sx={{ gridColumn: \"span 4\"}}\n                        />\n                        <TextField\n                            label=\"Password\"\n                            type=\"password\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.password || ''}\n                            name=\"password\"\n                            error={Boolean(touched.password) && Boolean(errors.lastName)}\n                            helperText={touched.password && errors.password}\n                            sx={{ gridColumn: \"span 4\"}}\n                        />\n                    </Box>\n\n                    {/* BUTTON */}\n                    <Box>\n                        <Button\n                            fullWidth\n                            type=\"submit\"\n                            sx={{\n                                mt: \"2rem\",\n                                p: \"1rem\",\n                                backgroundColor: palette.primary.main,\n                                color: palette.background.alt,\n                                \"&:hover\": { backgroundColor: palette.primary.dark }\n                            }}\n                        >\n                            {isLogin ? \"LOGIN\" : \"REGISTER\"}\n                        </Button>\n                        <Button\n                            fullWidth\n                            onClick={() => {\n                                handleTestLogin()\n                                \n                            }}\n                            sx={{\n                                m: \"1rem 0\",\n                                p: \"1rem\",\n                                backgroundColor: palette.primary.main,\n                                color: palette.background.alt,\n                                \"&:hover\": { backgroundColor: palette.primary.dark }\n                            }}\n                        >\n                            Join as test user.\n                        </Button>\n                        <FlexBetween sx={{ width: \"100%\" }}>\n                            <Typography\n                                onClick={() => {\n                                    setPageType(isLogin ? \"register\" : \"login\");\n                                    resetForm();\n                                }}\n                                sx={{\n                                    textDecoration: \"underline\",\n                                    color: palette.primary.main,\n                                    \"&:hover\": {\n                                        cursor: \"pointer\",\n                                        color: palette.primary.light,\n                                    },\n                                }}\n                            >\n                                {isLogin \n                                ? \"Not a member? Sign Up here.\"\n                                : \"Already a member? Hop in here!\"}\n                            </Typography>\n\n                        </FlexBetween>\n                    </Box>\n                </form>\n            )}\n\n        </Formik>\n\n    )\n    \n\n}\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}