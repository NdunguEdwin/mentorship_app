{"ast":null,"code":"var _jsxFileName = \"/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/FeedWidget.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"state\";\nimport PostWidget from \"./PostWidget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeedWidget = ({\n  userId,\n  isProfile = false\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const token = useSelector(state => state.token);\n  const REACT_APP_HOST = process.env.REACT_APP_HOST;\n\n  //api call for fetching all posts\n  const getPosts = async () => {\n    const response = await fetch(`http://localhost:5000/posts`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setPosts({\n      posts: data\n    }));\n  };\n  const getUserPosts = async () => {\n    const response = await fetch(`http://localhost:5000/posts/${userId}/posts`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setPosts({\n      posts: data\n    }));\n  };\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map(({\n      _id,\n      userId,\n      firstName,\n      lastName,\n      userType,\n      description,\n      legalDomain,\n      location,\n      picturePath,\n      userPicturePath,\n      interests,\n      comments\n    }) => /*#__PURE__*/_jsxDEV(PostWidget, {\n      postId: _id,\n      postUserId: userId,\n      name: `${firstName} ${lastName}`,\n      userType: userType,\n      description: description,\n      legalDomain: legalDomain,\n      location: location,\n      picturePath: picturePath,\n      userPicturePath: userPicturePath,\n      interests: interests,\n      comments: comments\n    }, _id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n_s(FeedWidget, \"7TqOh3V0nCSP3QUJlbitnmq7L8o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = FeedWidget;\nexport default FeedWidget;\nvar _c;\n$RefreshReg$(_c, \"FeedWidget\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setPosts","PostWidget","jsxDEV","_jsxDEV","Fragment","_Fragment","FeedWidget","userId","isProfile","_s","dispatch","posts","state","token","REACT_APP_HOST","process","env","getPosts","response","fetch","method","headers","Authorization","data","json","getUserPosts","children","map","_id","firstName","lastName","userType","description","legalDomain","location","picturePath","userPicturePath","interests","comments","postId","postUserId","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/widgets/FeedWidget.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"state\";\nimport PostWidget from \"./PostWidget\";\n\nconst FeedWidget = ({ userId, isProfile = false }) => {\n    const dispatch = useDispatch();\n    const posts = useSelector((state) => state.posts);\n    const token = useSelector((state) => state.token);\n    const REACT_APP_HOST = process.env.REACT_APP_HOST;\n\n    //api call for fetching all posts\n    const getPosts = async () => {\n        const response = await fetch(`http://localhost:5000/posts`, {\n            method: \"GET\",\n            headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const data = await response.json();\n        dispatch(setPosts({ posts: data }));\n    };\n\n    const getUserPosts = async () => {\n        const response = await fetch(`http://localhost:5000/posts/${userId}/posts`, {\n            method: \"GET\",\n            headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const data = await response.json();\n        dispatch(setPosts({ posts: data }));\n    };\n\n    useEffect(() => {\n        if(isProfile) {\n            getUserPosts();\n        } else {\n            getPosts();\n        }\n    }, []);\n\n    return (\n        <>\n            {posts.map((\n                {\n                    _id,\n                    userId,\n                    firstName,\n                    lastName,\n                    userType,\n                    description,\n                    legalDomain,\n                    location,\n                    picturePath,\n                    userPicturePath,\n                    interests,\n                    comments,\n                }\n            ) => (\n                <PostWidget \n                    key={_id}\n                    postId={_id}\n                    postUserId={userId}\n                    name={`${firstName} ${lastName}`}\n                    userType={userType}\n                    description={description}\n                    legalDomain={legalDomain}\n                    location={location}\n                    picturePath={picturePath}\n                    userPicturePath={userPicturePath}\n                    interests={interests}\n                    comments={comments}\n                />\n            )\n            )}\n        </>\n    )\n    \n}\n\nexport default FeedWidget;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,SAAS,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,KAAK,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EACjD,MAAME,KAAK,GAAGd,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EACjD,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACF,cAAc;;EAEjD;EACA,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4B,EAAE;MACxDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAEC,aAAa,EAAG,UAAST,KAAM;MAAE;IAChD,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCd,QAAQ,CAACV,QAAQ,CAAC;MAAEW,KAAK,EAAEY;IAAK,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BZ,MAAO,QAAO,EAAE;MACxEa,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAEC,aAAa,EAAG,UAAST,KAAM;MAAE;IAChD,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCd,QAAQ,CAACV,QAAQ,CAAC;MAAEW,KAAK,EAAEY;IAAK,CAAC,CAAC,CAAC;EACvC,CAAC;EAED1B,SAAS,CAAC,MAAM;IACZ,IAAGW,SAAS,EAAE;MACViB,YAAY,CAAC,CAAC;IAClB,CAAC,MAAM;MACHR,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA,CAAAE,SAAA;IAAAqB,QAAA,EACKf,KAAK,CAACgB,GAAG,CAAC,CACP;MACIC,GAAG;MACHrB,MAAM;MACNsB,SAAS;MACTC,QAAQ;MACRC,QAAQ;MACRC,WAAW;MACXC,WAAW;MACXC,QAAQ;MACRC,WAAW;MACXC,eAAe;MACfC,SAAS;MACTC;IACJ,CAAC,kBAEDnC,OAAA,CAACF,UAAU;MAEPsC,MAAM,EAAEX,GAAI;MACZY,UAAU,EAAEjC,MAAO;MACnBkC,IAAI,EAAG,GAAEZ,SAAU,IAAGC,QAAS,EAAE;MACjCC,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBC,WAAW,EAAEA,WAAY;MACzBC,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBC,eAAe,EAAEA,eAAgB;MACjCC,SAAS,EAAEA,SAAU;MACrBC,QAAQ,EAAEA;IAAS,GAXdV,GAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYX,CAEL;EAAC,gBACH,CAAC;AAGX,CAAC;AAAApC,EAAA,CAxEKH,UAAU;EAAA,QACKR,WAAW,EACdC,WAAW,EACXA,WAAW;AAAA;AAAA+C,EAAA,GAHvBxC,UAAU;AA0EhB,eAAeA,UAAU;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}