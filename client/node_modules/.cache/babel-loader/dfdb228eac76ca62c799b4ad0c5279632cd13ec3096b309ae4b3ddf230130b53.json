{"ast":null,"code":"// import { useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { setPost } from \"state\";\n// import {\n//   ChatBubbleOutlineOutlined,\n// //   FavoriteBorderOutlined,\n// //   FavoriteOutlined,\n// //   ShareOutlined,\n// } from \"@mui/icons-material\";\n// import {\n//   Box,\n//   Button,\n//   Divider,\n//   IconButton,\n//   TextField,\n//   Typography,\n//   useTheme,\n// } from \"@mui/material\";\n// import FlexBetween from \"components/FlexBetween\";\n// import Friend from \"components/Friend\";\n// import WidgetWrapper from \"components/WidgetWrapper\";\n// import UserImage from \"components/UserImage\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const PostWidget = ({\n//   postId,\n//   postUserId,\n//   name,\n//   description,\n//   userType,\n//   location,\n//   legalDomain,\n//   picturePath,\n//   userPicturePath,\n//   interests,\n//   comments,\n//   buttonDisable,\n// }) => {\n//   const [isComments, setIsComments] = useState(false);\n//   const [comment, setComment] = useState(\"\");\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const token = useSelector((state) => state.token);\n//   const loggedInUser = useSelector((state) => state.user);\n//   const userId = loggedInUser?.userId;\n//   const isInterested = Boolean(\n//     interests.find((user) => userId === user.userId)\n//   );\n//   const interestCount = Object.keys(interests).length;\n//   const { palette } = useTheme();\n//   const main = palette.neutral.main;\n//   const primary = palette.primary.main;\n\n//   const patchInterest = async () => {\n//     const response = await fetch(\n//       `http://localhost:5000/posts/${postId}/interest`,\n//       {\n//         method: \"PATCH\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ user: loggedInUser }),\n//       }\n//     );\n//     const updatedPost = await response.json();\n//     dispatch(setPost({ post: updatedPost }));\n//   };\n\n//   const patchComment = async () => {\n//     const response = await fetch(\n//       `http://localhost:5000/posts/${postId}/comment`,\n//       {\n//         method: \"PATCH\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ user: loggedInUser, comment }),\n//       }\n//     );\n//     const updatedPost = await response.json();\n//     dispatch(setPost({ post: updatedPost }));\n//     setComment(\"\");\n//   };\n\n//   const handleDelete = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/posts/${postId}`, {\n//         method: \"DELETE\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       });\n\n//       if (response.ok) {\n//         window.location.reload(); // Or navigate to another page\n//       } else {\n//         console.error(\"Failed to delete the post\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//     }\n//   };\n\n//   return (\n//     <WidgetWrapper m=\"2rem 0\" gap=\"1rem\">\n//       <Friend\n//         connectionId={postUserId}\n//         name={name}\n//         subtitle={userType}\n//         userPicturePath={userPicturePath}\n//       />\n\n//       <FlexBetween\n//         sx={{\n//           flexDirection: \"column\",\n//           alignItems: \"flex-start\",\n//           width: \"100%\",\n//           cursor: \"pointer\",\n//         }}\n//         onClick={() => {\n//           navigate(`/posts/${postId}`);\n//           navigate(0);\n//         }}\n//       >\n//         <Typography color={main} sx={{ mt: \"1rem\", fontSize: \"1rem\" }}>\n//           {description}\n//         </Typography>\n\n//         {picturePath && (\n//           <img\n//             width=\"100%\"\n//             height=\"auto\"\n//             alt=\"post\"\n//             style={{ borderRadius: \"0.75rem\", marginTop: \"0.75rem\" }}\n//             src={`http://localhost:5000/assets/${picturePath}`}\n//           />\n//         )}\n\n//         <FlexBetween width=\"100%\" mt=\"0.5rem\" fontSize=\"0.75rem\">\n//           <Typography\n//             color={primary}\n//             sx={{ fontSize: \"0.75rem\", fontWeight: \"500\" }}\n//           >\n//             Location: {location}\n//           </Typography>\n//           <Typography\n//             color={primary}\n//             sx={{ fontSize: \"0.75rem\", fontWeight: \"500\" }}\n//           >\n//             Domain: {legalDomain}\n//           </Typography>\n//         </FlexBetween>\n//       </FlexBetween>\n\n//       {/* Edit/Delete buttons */}\n//       {userId === postUserId && (\n//         <Box display=\"flex\" gap=\"1rem\" mt=\"1rem\">\n//           <Button\n//             variant=\"outlined\"\n//             size=\"small\"\n//             onClick={() => console.log(\"Edit feature coming soon\")}\n//           >\n//             Edit\n//           </Button>\n//           <Button\n//             variant=\"outlined\"\n//             size=\"small\"\n//             color=\"error\"\n//             onClick={handleDelete}\n//           >\n//             Delete\n//           </Button>\n//         </Box>\n//       )}\n\n//       <FlexBetween mt=\"0.25rem\">\n//         <FlexBetween gap=\"1rem\" width=\"100%\">\n//           <FlexBetween gap=\"0.5rem\">\n//             <Button\n//               size=\"small\"\n//               disabled={isInterested}\n//               onClick={patchInterest}\n//               sx={{\n//                 backgroundColor: palette.primary.main,\n//                 color: palette.background.alt,\n//                 \"&:hover\": { backgroundColor: palette.primary.dark },\n//               }}\n//             >\n//               Interested\n//             </Button>\n//             <Typography>{interestCount}</Typography>\n//           </FlexBetween>\n\n//           <FlexBetween gap=\"0.3rem\">\n//             <IconButton\n//               disabled={buttonDisable}\n//               onClick={() => setIsComments(!isComments)}\n//             >\n//               <ChatBubbleOutlineOutlined />\n//             </IconButton>\n//             <Typography>{comments.length}</Typography>\n//           </FlexBetween>\n//         </FlexBetween>\n//       </FlexBetween>\n\n//       {isComments && (\n//         <Box mt=\"0.5rem\">\n//           <TextField\n//             placeholder=\"write a comment\"\n//             onChange={(e) => setComment(e.target.value)}\n//             value={comment}\n//             sx={{\n//               width: \"100%\",\n//               backgroundColor: palette.neutral.light,\n//             }}\n//             multiline={true}\n//           />\n//           <Button size=\"small\" onClick={patchComment}>\n//             Post Comment\n//           </Button>\n\n//           {comments.length > 0 &&\n//             comments.map((comment, i) => (\n//               <Box key={`${name}-${i}`}>\n//                 <Divider />\n//                 <FlexBetween\n//                   sx={{\n//                     flexDirection: \"column\",\n//                     alignItems: \"flex-start\",\n//                     m: \"0.5rem 1rem\",\n//                   }}\n//                 >\n//                   <FlexBetween>\n//                     <UserImage image={comment.user.picturePath} size=\"25px\" />\n//                     <Typography sx={{ color: primary, m: \"0.25rem\" }}>\n//                       {comment.user.firstName}\n//                     </Typography>\n//                   </FlexBetween>\n\n//                   <Typography sx={{ color: main, mt: \"0.25rem\" }}>\n//                     {comment.comment}\n//                   </Typography>\n//                 </FlexBetween>\n//               </Box>\n//             ))}\n//           <Divider />\n//         </Box>\n//       )}\n//     </WidgetWrapper>\n//   );\n// };\n\n// export default PostWidget;","map":{"version":3,"names":[],"sources":["/home/edwin/mike/Protege-Mentorship-App/client/src/scenes/postDetails/index.js"],"sourcesContent":["// import { useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { setPost } from \"state\";\n// import {\n//   ChatBubbleOutlineOutlined,\n// //   FavoriteBorderOutlined,\n// //   FavoriteOutlined,\n// //   ShareOutlined,\n// } from \"@mui/icons-material\";\n// import {\n//   Box,\n//   Button,\n//   Divider,\n//   IconButton,\n//   TextField,\n//   Typography,\n//   useTheme,\n// } from \"@mui/material\";\n// import FlexBetween from \"components/FlexBetween\";\n// import Friend from \"components/Friend\";\n// import WidgetWrapper from \"components/WidgetWrapper\";\n// import UserImage from \"components/UserImage\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const PostWidget = ({\n//   postId,\n//   postUserId,\n//   name,\n//   description,\n//   userType,\n//   location,\n//   legalDomain,\n//   picturePath,\n//   userPicturePath,\n//   interests,\n//   comments,\n//   buttonDisable,\n// }) => {\n//   const [isComments, setIsComments] = useState(false);\n//   const [comment, setComment] = useState(\"\");\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const token = useSelector((state) => state.token);\n//   const loggedInUser = useSelector((state) => state.user);\n//   const userId = loggedInUser?.userId;\n//   const isInterested = Boolean(\n//     interests.find((user) => userId === user.userId)\n//   );\n//   const interestCount = Object.keys(interests).length;\n//   const { palette } = useTheme();\n//   const main = palette.neutral.main;\n//   const primary = palette.primary.main;\n\n//   const patchInterest = async () => {\n//     const response = await fetch(\n//       `http://localhost:5000/posts/${postId}/interest`,\n//       {\n//         method: \"PATCH\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ user: loggedInUser }),\n//       }\n//     );\n//     const updatedPost = await response.json();\n//     dispatch(setPost({ post: updatedPost }));\n//   };\n\n//   const patchComment = async () => {\n//     const response = await fetch(\n//       `http://localhost:5000/posts/${postId}/comment`,\n//       {\n//         method: \"PATCH\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ user: loggedInUser, comment }),\n//       }\n//     );\n//     const updatedPost = await response.json();\n//     dispatch(setPost({ post: updatedPost }));\n//     setComment(\"\");\n//   };\n\n//   const handleDelete = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/posts/${postId}`, {\n//         method: \"DELETE\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       });\n\n//       if (response.ok) {\n//         window.location.reload(); // Or navigate to another page\n//       } else {\n//         console.error(\"Failed to delete the post\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//     }\n//   };\n\n//   return (\n//     <WidgetWrapper m=\"2rem 0\" gap=\"1rem\">\n//       <Friend\n//         connectionId={postUserId}\n//         name={name}\n//         subtitle={userType}\n//         userPicturePath={userPicturePath}\n//       />\n\n//       <FlexBetween\n//         sx={{\n//           flexDirection: \"column\",\n//           alignItems: \"flex-start\",\n//           width: \"100%\",\n//           cursor: \"pointer\",\n//         }}\n//         onClick={() => {\n//           navigate(`/posts/${postId}`);\n//           navigate(0);\n//         }}\n//       >\n//         <Typography color={main} sx={{ mt: \"1rem\", fontSize: \"1rem\" }}>\n//           {description}\n//         </Typography>\n\n//         {picturePath && (\n//           <img\n//             width=\"100%\"\n//             height=\"auto\"\n//             alt=\"post\"\n//             style={{ borderRadius: \"0.75rem\", marginTop: \"0.75rem\" }}\n//             src={`http://localhost:5000/assets/${picturePath}`}\n//           />\n//         )}\n\n//         <FlexBetween width=\"100%\" mt=\"0.5rem\" fontSize=\"0.75rem\">\n//           <Typography\n//             color={primary}\n//             sx={{ fontSize: \"0.75rem\", fontWeight: \"500\" }}\n//           >\n//             Location: {location}\n//           </Typography>\n//           <Typography\n//             color={primary}\n//             sx={{ fontSize: \"0.75rem\", fontWeight: \"500\" }}\n//           >\n//             Domain: {legalDomain}\n//           </Typography>\n//         </FlexBetween>\n//       </FlexBetween>\n\n//       {/* Edit/Delete buttons */}\n//       {userId === postUserId && (\n//         <Box display=\"flex\" gap=\"1rem\" mt=\"1rem\">\n//           <Button\n//             variant=\"outlined\"\n//             size=\"small\"\n//             onClick={() => console.log(\"Edit feature coming soon\")}\n//           >\n//             Edit\n//           </Button>\n//           <Button\n//             variant=\"outlined\"\n//             size=\"small\"\n//             color=\"error\"\n//             onClick={handleDelete}\n//           >\n//             Delete\n//           </Button>\n//         </Box>\n//       )}\n\n//       <FlexBetween mt=\"0.25rem\">\n//         <FlexBetween gap=\"1rem\" width=\"100%\">\n//           <FlexBetween gap=\"0.5rem\">\n//             <Button\n//               size=\"small\"\n//               disabled={isInterested}\n//               onClick={patchInterest}\n//               sx={{\n//                 backgroundColor: palette.primary.main,\n//                 color: palette.background.alt,\n//                 \"&:hover\": { backgroundColor: palette.primary.dark },\n//               }}\n//             >\n//               Interested\n//             </Button>\n//             <Typography>{interestCount}</Typography>\n//           </FlexBetween>\n\n//           <FlexBetween gap=\"0.3rem\">\n//             <IconButton\n//               disabled={buttonDisable}\n//               onClick={() => setIsComments(!isComments)}\n//             >\n//               <ChatBubbleOutlineOutlined />\n//             </IconButton>\n//             <Typography>{comments.length}</Typography>\n//           </FlexBetween>\n//         </FlexBetween>\n//       </FlexBetween>\n\n//       {isComments && (\n//         <Box mt=\"0.5rem\">\n//           <TextField\n//             placeholder=\"write a comment\"\n//             onChange={(e) => setComment(e.target.value)}\n//             value={comment}\n//             sx={{\n//               width: \"100%\",\n//               backgroundColor: palette.neutral.light,\n//             }}\n//             multiline={true}\n//           />\n//           <Button size=\"small\" onClick={patchComment}>\n//             Post Comment\n//           </Button>\n\n//           {comments.length > 0 &&\n//             comments.map((comment, i) => (\n//               <Box key={`${name}-${i}`}>\n//                 <Divider />\n//                 <FlexBetween\n//                   sx={{\n//                     flexDirection: \"column\",\n//                     alignItems: \"flex-start\",\n//                     m: \"0.5rem 1rem\",\n//                   }}\n//                 >\n//                   <FlexBetween>\n//                     <UserImage image={comment.user.picturePath} size=\"25px\" />\n//                     <Typography sx={{ color: primary, m: \"0.25rem\" }}>\n//                       {comment.user.firstName}\n//                     </Typography>\n//                   </FlexBetween>\n\n//                   <Typography sx={{ color: main, mt: \"0.25rem\" }}>\n//                     {comment.comment}\n//                   </Typography>\n//                 </FlexBetween>\n//               </Box>\n//             ))}\n//           <Divider />\n//         </Box>\n//       )}\n//     </WidgetWrapper>\n//   );\n// };\n\n// export default PostWidget;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}